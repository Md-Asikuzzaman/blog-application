generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Author {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts       Post[]
  preferences Preference?
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Author model relationships
  author   Author? @relation(fields: [authorId], references: [id])
  authorId String? @db.ObjectId

  // Category model relationships
  categoryIDs String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIDs], references: [id])

  // Tag model relationships
  tagIDs String[] @db.ObjectId
  tags   Tag[]    @relation(fields: [tagIDs], references: [id])
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Post model relationships
  postIDs String[] @db.ObjectId
  posts   Post[]   @relation(fields: [postIDs], references: [id])
}

model Tag {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Post model relationships
  postIDs String[] @db.ObjectId
  posts   Post[]   @relation(fields: [postIDs], references: [id])
}

model Preference {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  status    String   @default("general")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   Author? @relation(fields: [authorId], references: [id])
  authorId String? @unique @db.ObjectId
}
